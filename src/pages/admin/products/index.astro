---
import AdminLayout from "@/layouts/adminLayout.astro";
import { Button } from "@/components/ui/button";
import { getProducts } from "@/lib/database";
import { requireAdmin } from "@/lib/auth-utils";
import type { Product } from "@/lib/database";

// Verificar que el usuario es administrador
const { redirect, user, isAdmin } = await requireAdmin(Astro.cookies);
if (redirect) {
  return Astro.redirect(redirect);
}

// Obtener parámetros de la URL
const url = new URL(Astro.request.url);
const success = url.searchParams.get('success');
const error = url.searchParams.get('error');

// Obtener todos los productos con logs para debug y manejo de errores
let allProducts: Product[] = [];

try {
  console.log('🔍 Obteniendo productos desde la base de datos...');
  allProducts = await getProducts(100, 0) as Product[];
  console.log('📦 Productos obtenidos:', allProducts.length);
  console.log('📦 Datos de productos:', allProducts);
} catch (error) {
  console.error('❌ Error obteniendo productos:', error);
  allProducts = [];
}

// Estadísticas
const totalProducts = allProducts.length;
const activeProducts = allProducts.filter(product => product.status === 'active').length;
const inactiveProducts = allProducts.filter(product => product.status === 'inactive').length;
const draftProducts = allProducts.filter(product => product.status === 'draft').length;

console.log('📊 Estadísticas calculadas:', {
  totalProducts,
  activeProducts,
  inactiveProducts,
  draftProducts
});

// Función para formatear moneda
function formatCurrency(amount: number): string {
  return new Intl.NumberFormat('es-MX', {
    style: 'currency',
    currency: 'MXN'
  }).format(amount);
}

// Función para obtener el color del badge según el estado
function getStatusColor(status: string, stock: number): string {
  if (status === 'draft') return 'bg-gray-100 text-gray-800';
  if (status === 'inactive') return 'bg-red-100 text-red-800';
  if (stock === 0) return 'bg-red-100 text-red-800';
  if (stock < 10) return 'bg-yellow-100 text-yellow-800';
  return 'bg-green-100 text-green-800';
}

// Función para obtener el texto del estado
function getStatusText(status: string, stock: number): string {
  if (status === 'draft') return 'Borrador';
  if (status === 'inactive') return 'Inactivo';
  if (stock === 0) return 'Sin Stock';
  if (stock < 10) return 'Bajo Stock';
  return 'Activo';
}
---

<AdminLayout title="Gestión de Productos">
  <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
      <!-- Header -->
      <div class="mb-8">
        <div class="flex items-center justify-between">
          <div>
            <h1 class="text-3xl font-bold tracking-tight text-foreground">Gestión de Productos</h1>
            <p class="mt-2 text-muted-foreground">
              Administra todos los productos de tu tienda
            </p>
          </div>
          <a href="/admin/products/add">
            <Button className="bg-primary text-primary-foreground hover:bg-primary/90">
              <svg class="mr-2 h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
              </svg>
              Agregar Producto
            </Button>
          </a>
        </div>
        
        <!-- Indicador de datos -->
        <div class="mt-4 p-4 bg-blue-50 border border-blue-200 rounded-lg">
          <h3 class="text-sm font-medium text-blue-800">📊 Estado de los datos:</h3>
          <div class="mt-2 text-sm text-blue-600">
            <p>• Productos cargados: {allProducts.length}</p>
            <p>• Productos activos: {activeProducts}</p>
            <p>• Productos inactivos: {inactiveProducts}</p>
            <p>• Productos en borrador: {draftProducts}</p>
          </div>
        </div>
      </div>

      <!-- Estadísticas de productos -->
      <div class="mb-8 grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-4">
        <div class="rounded-lg border border-border bg-background p-6">
          <div class="flex items-center">
            <div class="flex-shrink-0">
              <svg class="h-8 w-8 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"></path>
              </svg>
            </div>
            <div class="ml-4">
              <p class="text-sm font-medium text-muted-foreground">Total Productos</p>
              <p class="text-2xl font-semibold text-foreground">{totalProducts}</p>
            </div>
          </div>
        </div>

        <div class="rounded-lg border border-border bg-background p-6">
          <div class="flex items-center">
            <div class="flex-shrink-0">
              <svg class="h-8 w-8 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
              </svg>
            </div>
            <div class="ml-4">
              <p class="text-sm font-medium text-muted-foreground">Activos</p>
              <p class="text-2xl font-semibold text-foreground">{activeProducts}</p>
            </div>
          </div>
        </div>

        <div class="rounded-lg border border-border bg-background p-6">
          <div class="flex items-center">
            <div class="flex-shrink-0">
              <svg class="h-8 w-8 text-yellow-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
              </svg>
            </div>
            <div class="ml-4">
              <p class="text-sm font-medium text-muted-foreground">Borradores</p>
              <p class="text-2xl font-semibold text-foreground">{draftProducts}</p>
            </div>
          </div>
        </div>

        <div class="rounded-lg border border-border bg-background p-6">
          <div class="flex items-center">
            <div class="flex-shrink-0">
              <svg class="h-8 w-8 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728L5.636 5.636m12.728 12.728L18.364 5.636M5.636 18.364l12.728-12.728"></path>
              </svg>
            </div>
            <div class="ml-4">
              <p class="text-sm font-medium text-muted-foreground">Inactivos</p>
              <p class="text-2xl font-semibold text-foreground">{inactiveProducts}</p>
            </div>
          </div>
        </div>
      </div>

      <!-- Mensajes de éxito -->
      {success === 'created' && (
        <div class="mb-6 rounded-md bg-green-50 border border-green-200 p-4">
          <div class="flex">
            <div class="flex-shrink-0">
              <svg class="h-5 w-5 text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
            </div>
            <div class="ml-3">
              <h3 class="text-sm font-medium text-green-800">Producto creado</h3>
              <div class="mt-2 text-sm text-green-700">
                <p>El producto se ha creado exitosamente.</p>
              </div>
            </div>
          </div>
        </div>
      )}

      {success === 'draft_saved' && (
        <div class="mb-6 rounded-md bg-blue-50 border border-blue-200 p-4">
          <div class="flex">
            <div class="flex-shrink-0">
              <svg class="h-5 w-5 text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
            </div>
            <div class="ml-3">
              <h3 class="text-sm font-medium text-blue-800">Borrador guardado</h3>
              <div class="mt-2 text-sm text-blue-700">
                <p>El producto se ha guardado como borrador.</p>
              </div>
            </div>
          </div>
        </div>
      )}

      {success === 'updated' && (
        <div class="mb-6 rounded-md bg-green-50 border border-green-200 p-4">
          <div class="flex">
            <div class="flex-shrink-0">
              <svg class="h-5 w-5 text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
            </div>
            <div class="ml-3">
              <h3 class="text-sm font-medium text-green-800">Producto actualizado</h3>
              <div class="mt-2 text-sm text-green-700">
                <p>El producto se ha actualizado exitosamente.</p>
              </div>
            </div>
          </div>
        </div>
      )}

      {error === 'product_not_found' && (
        <div class="mb-6 rounded-md bg-red-50 border border-red-200 p-4">
          <div class="flex">
            <div class="flex-shrink-0">
              <svg class="h-5 w-5 text-red-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
            </div>
            <div class="ml-3">
              <h3 class="text-sm font-medium text-red-800">Producto no encontrado</h3>
              <div class="mt-2 text-sm text-red-700">
                <p>El producto que intentas editar no existe.</p>
              </div>
            </div>
          </div>
        </div>
      )}

      {error === 'invalid_id' && (
        <div class="mb-6 rounded-md bg-red-50 border border-red-200 p-4">
          <div class="flex">
            <div class="flex-shrink-0">
              <svg class="h-5 w-5 text-red-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
            </div>
            <div class="ml-3">
              <h3 class="text-sm font-medium text-red-800">ID inválido</h3>
              <div class="mt-2 text-sm text-red-700">
                <p>El ID del producto no es válido.</p>
              </div>
            </div>
          </div>
        </div>
      )}

      <!-- Filtros y búsqueda -->
      <div class="mb-6 rounded-lg border border-border bg-background p-4">
        <div class="flex flex-col gap-4 sm:flex-row sm:items-center sm:justify-between">
          <div class="flex flex-col gap-4 sm:flex-row sm:items-center">
            <div class="relative">
              <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                <svg class="h-5 w-5 text-muted-foreground" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                </svg>
              </div>
              <input
                type="text"
                placeholder="Buscar productos..."
                class="w-full rounded-md border border-border bg-background pl-10 pr-3 py-2 text-foreground placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent sm:w-64"
              />
            </div>
            
            <select class="rounded-md border border-border bg-background px-3 py-2 text-foreground focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent">
              <option value="">Todas las categorías</option>
              <option value="filtros">Filtros</option>
              <option value="cuartos-limpios">Cuartos Limpios</option>
              <option value="accesorios">Accesorios</option>
              <option value="servicios">Servicios</option>
            </select>

            <select class="rounded-md border border-border bg-background px-3 py-2 text-foreground focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent">
              <option value="">Todos los estados</option>
              <option value="active">Activo</option>
              <option value="inactive">Inactivo</option>
              <option value="draft">Borrador</option>
            </select>
          </div>

          <div class="flex items-center space-x-2">
            <Button variant="outline" size="sm" className="border-border text-foreground hover:bg-muted">
              <svg class="mr-2 h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4"></path>
              </svg>
              Exportar
            </Button>
          </div>
        </div>
      </div>

      <!-- Tabla de productos -->
      <div class="rounded-lg border border-border bg-background">
        {allProducts.length === 0 ? (
          <div class="text-center py-12">
            <svg class="mx-auto h-12 w-12 text-muted-foreground" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"></path>
            </svg>
            <h3 class="mt-2 text-sm font-medium text-foreground">No hay productos</h3>
            <p class="mt-1 text-sm text-muted-foreground">Comienza agregando tu primer producto.</p>
            <div class="mt-6">
              <a href="/admin/products/add">
                <Button className="bg-primary text-primary-foreground hover:bg-primary/90">
                  <svg class="mr-2 h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                  </svg>
                  Agregar Producto
                </Button>
              </a>
            </div>
          </div>
        ) : (
          <div class="overflow-x-auto">
            <table class="w-full">
              <thead class="bg-muted">
                <tr>
                  <th class="px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider">
                    <input type="checkbox" class="rounded border-border text-primary focus:ring-primary" />
                  </th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider">Producto</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider">SKU</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider">Precio</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider">Stock</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider">Categoría</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider">Estado</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider">Acciones</th>
                </tr>
              </thead>
              <tbody class="divide-y divide-border">
                {allProducts.map((product) => (
                  <tr class="hover:bg-muted/50">
                    <td class="px-6 py-4 whitespace-nowrap">
                      <input type="checkbox" class="rounded border-border text-primary focus:ring-primary" />
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                      <div class="flex items-center">
                        <div class="h-12 w-12 flex-shrink-0">
                          {product.image_url ? (
                            <img class="h-12 w-12 rounded-md object-cover" src={product.image_url} alt={product.name} />
                          ) : (
                            <div class="h-12 w-12 rounded-md bg-muted flex items-center justify-center">
                              <svg class="h-6 w-6 text-muted-foreground" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                              </svg>
                            </div>
                          )}
                        </div>
                        <div class="ml-4">
                          <div class="text-sm font-medium text-foreground">{product.name}</div>
                          <div class="text-sm text-muted-foreground">{product.category}</div>
                        </div>
                      </div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-muted-foreground font-mono">
                      {product.uuid.substring(0, 8)}...
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-foreground">
                      {formatCurrency(product.price)}
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-foreground">{product.stock}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-foreground capitalize">
                      {product.category.replace('-', ' ')}
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                      <span class={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getStatusColor(product.status, product.stock)}`}>
                        {getStatusText(product.status, product.stock)}
                      </span>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                      <div class="flex space-x-2">
                        <a href={`/admin/products/edit/${product.uuid}`}>
                          <Button variant="outline" size="sm" className="border-border text-foreground hover:bg-muted">
                            <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                            </svg>
                          </Button>
                        </a>
                        <a href={`/product/${product.uuid}`}>
                          <Button variant="outline" size="sm" className="border-border text-foreground hover:bg-muted">
                            <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                            </svg>
                          </Button>
                        </a>
                        <Button variant="outline" size="sm" className="border-border text-red-600 hover:bg-red-50">
                          <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                          </svg>
                        </Button>
                      </div>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        )}

        <!-- Paginación -->
        {allProducts.length > 0 && (
          <div class="px-6 py-4 border-t border-border">
            <div class="flex items-center justify-between">
              <div class="text-sm text-muted-foreground">
                Mostrando <span class="font-medium text-foreground">1</span> a <span class="font-medium text-foreground">{allProducts.length}</span> de <span class="font-medium text-foreground">{totalProducts}</span> productos
              </div>
              <div class="text-sm text-muted-foreground">
                {totalProducts === 1 ? '1 producto' : `${totalProducts} productos`}
              </div>
            </div>
          </div>
        )}
      </div>
  </div>
</AdminLayout>