---
import AuthLayout from "@/layouts/authLayout.astro";
import PasswordInput from "@/components/ui/PasswordInput.astro";
import { getUserByEmail } from "@/lib/database";
import { verifyPassword, generateJWT, validateLoginData } from "@/lib/auth";

// Manejar el formulario de login
if (Astro.request.method === "POST") {
  try {
    const formData = await Astro.request.formData();
    
    const loginData = {
      email: formData.get("email") as string,
      password: formData.get("password") as string
    };

    // Validar datos
    const validation = validateLoginData(loginData);
    if (!validation.isValid) {
      return Astro.redirect(`/login?error=${encodeURIComponent(validation.errors.join(', '))}`);
    }

    // Buscar usuario en la base de datos
    const user = await getUserByEmail(loginData.email);
    if (!user) {
      return Astro.redirect(`/login?error=${encodeURIComponent('Email o contraseña incorrectos')}`);
    }

    // Verificar contraseña
    const isPasswordValid = await verifyPassword(loginData.password, user.password_hash);
    if (!isPasswordValid) {
      return Astro.redirect(`/login?error=${encodeURIComponent('Email o contraseña incorrectos')}`);
    }

    // Verificar que el usuario esté activo
    if (user.status !== 'active') {
      return Astro.redirect(`/login?error=${encodeURIComponent('Tu cuenta no está activa. Verifica tu email o contacta al administrador')}`);
    }

    // Generar JWT
    const authUser = {
      id: user.id,
      email: user.email,
      firstName: user.first_name,
      lastName: user.last_name,
      status: user.status,
      emailVerified: user.email_verified
    };

    const token = generateJWT(authUser);

    // Establecer cookie de sesión
    Astro.cookies.set('auth-token', token, {
      httpOnly: true,
      secure: process.env.NODE_ENV === 'production',
      sameSite: 'lax',
      maxAge: 60 * 60 * 24 * 7, // 7 días
      path: '/'
    });

    // Redirigir al dashboard o página principal
    const redirectTo = Astro.url.searchParams.get('redirect') || '/';
    return Astro.redirect(redirectTo);
    
  } catch (error) {
    console.error('Error en login:', error);
    return Astro.redirect(`/login?error=${encodeURIComponent('Error interno del servidor')}`);
  }
}

// Obtener mensaje de error y otros mensajes de la URL
const url = new URL(Astro.request.url);
const error = url.searchParams.get('error');
const message = url.searchParams.get('message');
---

<AuthLayout title="Iniciar sesión">
  <div class="flex min-h-screen flex-col justify-center px-6 py-12 lg:px-8">
    <div class="sm:mx-auto sm:w-full sm:max-w-sm">
      <img
        src="https://tailwindcss.com/plus-assets/img/logos/mark.svg?color=indigo&shade=600"
        alt="Tu Empresa"
        class="mx-auto h-10 w-auto"
      />
      <h2
        class="mt-10 text-center text-2xl/9 font-bold tracking-tight text-foreground"
      >
        Inicia sesión en tu cuenta
      </h2>
    </div>

    <div class="mt-10 sm:mx-auto sm:w-full sm:max-w-sm">
      {error && (
        <div class="mb-4 rounded-md bg-red-50 p-4">
          <div class="text-sm text-red-700">{error}</div>
        </div>
      )}
      
      {message === 'sesion-cerrada' && (
        <div class="mb-4 rounded-md bg-green-50 p-4">
          <div class="text-sm text-green-700">Sesión cerrada correctamente</div>
        </div>
      )}
      
      <form method="POST" class="space-y-6">
        <div>
          <label for="email" class="block text-sm/6 font-medium text-foreground">
            Dirección de correo electrónico
          </label>
          <div class="mt-2">
            <input
              id="email"
              type="email"
              name="email"
              required
              autocomplete="email"
              class="block w-full rounded-md bg-background px-3 py-1.5 text-base text-foreground outline-1 -outline-offset-1 outline-border placeholder:text-muted-foreground focus:outline-2 focus:-outline-offset-2 focus:outline-primary sm:text-sm/6"
            />
          </div>
        </div>

        <div>
          <div class="flex items-center justify-between">
            <label for="password" class="block text-sm/6 font-medium text-foreground">
              Contraseña
            </label>
            <div class="text-sm">
              <a
                href="/forgot-password"
                class="font-semibold text-primary hover:text-primary/90"
              >
                ¿Olvidaste tu contraseña?
              </a>
            </div>
          </div>
          <div class="mt-2">
            <PasswordInput
              id="password"
              name="password"
              required
              autocomplete="current-password"
            />
          </div>
        </div>

        <div>
          <button
            type="submit"
            class="flex w-full justify-center rounded-md bg-primary px-3 py-1.5 text-sm/6 font-semibold text-primary-foreground shadow-xs hover:bg-primary/90 focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary"
          >
            Iniciar sesión
          </button>
        </div>
      </form>

      <p class="mt-10 text-center text-sm/6 text-muted-foreground">
        ¿No tienes una cuenta?
        <a href="/signup" class="font-semibold text-primary hover:text-primary/90"
          >Crear una cuenta</a
        >
      </p>
    </div>
  </div>
</AuthLayout>
